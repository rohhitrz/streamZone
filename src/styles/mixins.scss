@import './variables.scss';

// Responsive breakpoints mixins
@mixin sm {
  @media (min-width: $breakpoint-sm) {
    @content;
  }
}

@mixin md {
  @media (min-width: $breakpoint-md) {
    @content;
  }
}

@mixin lg {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin xl {
  @media (min-width: $breakpoint-xl) {
    @content;
  }
}

@mixin xxl {
  @media (min-width: $breakpoint-2xl) {
    @content;
  }
}

// Named breakpoints
@mixin breakpoint($point) {
  @if $point == mobile {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $point == tablet {
    @media (min-width: $breakpoint-md) and (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $point == desktop {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  }
}

// Max width breakpoints
@mixin max-sm {
  @media (max-width: ($breakpoint-sm - 1px)) {
    @content;
  }
}

@mixin max-md {
  @media (max-width: ($breakpoint-md - 1px)) {
    @content;
  }
}

@mixin max-lg {
  @media (max-width: ($breakpoint-lg - 1px)) {
    @content;
  }
}

@mixin max-xl {
  @media (max-width: ($breakpoint-xl - 1px)) {
    @content;
  }
}

// Flex layouts
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Grid layouts
@mixin grid-auto-fit($min-size: 300px, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-size, 1fr));
  gap: $gap;
}

// Container
@mixin container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: $container-padding;
  padding-right: $container-padding;
  
  @include sm {
    max-width: $container-width-sm;
  }
  
  @include md {
    max-width: $container-width-md;
  }
  
  @include lg {
    max-width: $container-width-lg;
  }
  
  @include xl {
    max-width: $container-width-xl;
  }
  
  @include xxl {
    max-width: $container-width-2xl;
  }
}

// Typography
@mixin heading-1 {
  font-size: $font-size-3xl;
  font-weight: $font-weight-bold;
  line-height: 1.2;
}

@mixin heading-2 {
  font-size: $font-size-xxl;
  font-weight: $font-weight-bold;
  line-height: 1.3;
}

@mixin heading-3 {
  font-size: $font-size-xl;
  font-weight: $font-weight-semibold;
  line-height: 1.4;
}

@mixin text-small {
  font-size: $font-size-sm;
  line-height: 1.5;
}

@mixin text-xsmall {
  font-size: $font-size-xs;
  line-height: 1.5;
}

// Truncate text
@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Animation
@mixin fadeIn($duration: 0.3s) {
  animation: fadeIn $duration ease;
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
}

@mixin slideInUp($duration: 0.3s, $distance: 20px) {
  animation: slideInUp $duration ease;
  
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY($distance);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// Hover effect for cards
@mixin card-hover {
  transition: transform $transition-normal, box-shadow $transition-normal;
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: $shadow-lg;
  }
}

// Custom scrollbar
@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: transparent;
  }
  
  &::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: $border-radius-full;
    
    &:hover {
      background-color: rgba(255, 255, 255, 0.3);
    }
  }
  
  // For Firefox
  scrollbar-width: thin;
  scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
}

// Button styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-xs $spacing-md;
  border-radius: $border-radius-md;
  font-weight: $font-weight-medium;
  cursor: pointer;
  transition: all $transition-fast;
  border: none;
  outline: none;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $accent-purple;
  color: white;
  
  &:hover:not(:disabled) {
    background-color: $accent-purple-hover;
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  border: 1px solid $accent-purple;
  color: $accent-purple;
  
  &:hover:not(:disabled) {
    background-color: rgba($accent-purple, 0.1);
  }
}

// Gradient text
@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

// Glassmorphism effect
@mixin glassmorphism {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
} 